//
//  LoginViewController.swift
//  LoginApp
//
//  Created by Alexey Manokhin on 12.02.2023.
//

import UIKit

final class LoginViewController: UIViewController {
    
    @IBOutlet var userLoginTF: UITextField!
    @IBOutlet var userPasswordTF: UITextField!
    
    private let story = "–ü—Ä–∏–≤–µ—Ç! üñê –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–µ–π. –†–æ–¥–∏–ª—Å—è 25 –º–∞—Ä—Ç–∞ 1990 –≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ –ë–µ–ª–≥–æ—Ä–æ–¥. –ñ–∏–≤—É –∑–¥–µ—Å—å –∂–µ üôÇ\nüëâ –° 2016-–≥–æ –≥–æ–¥–∞ –∑–∞–Ω–∏–º–∞—é—Å—å –Ω–µ–±–æ–ª—å—à–∏–º –±–∏–∑–Ω–µ—Å–æ–º –ø–æ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é –ø–µ—á–∞—Ç–µ–π –¥–ª—è –ò–ü, –û–û–û, –≤—Ä–∞—á–µ–π –∏ —Ç.–¥.. –ë—ã–ª–∏ –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –Ω–∞ Ozon, –Ω–æ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–µ –æ–ø—Ä–∞–≤–¥–∞–ª–∏—Å—å.\nüí° –†–µ—à–∏–ª –∑–∞–Ω—è—Ç—å—Å—è —á–µ–º-—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∫—Ä—É—Ç—ã–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º, –≤—Å–ø–æ–º–Ω–∏–ª, —á—Ç–æ –≤ –¥–∞–ª–µ–∫–æ–º 2012-–º –≥–æ–¥—É —Ö–æ—Ç–µ–ª –Ω–∞—É—á–∏—Ç—å—Å—è –ø–∏—Å–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—èüì±iPhone. –° –ø—Ä–æ—à–ª–æ–≥–æ –≥–æ–¥–∞ –≤—Å–µ—Ä—å–µ–∑ —É–≤–ª—ë–∫—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º –Ω–∞ —è–∑—ã–∫–µ Swift. –ó–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫—É—Ä—Å –≤ SwiftBook, —É—á—É—Å—å ü§ì –ë–ª–∞–≥–æ–¥–∞—Ä—è –ê–ª–µ–∫—Å–µ—é –ï—Ñ–∏–º–æ–≤—É, —É –º–µ–Ω—è —ç—Ç–æ –¥–∞–∂–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è üôÇ –•–æ—á—É —Å—Ç–∞—Ç—å –∫—Ä—É—Ç—ã–º iOS-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º, –∏ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —É –º–µ–Ω—è —ç—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è! ‚úä"
    
    lazy var alexey = Person(
        name: "–ê–ª–µ–∫—Å–µ–π",
        secondName: "–ú–∞–Ω–æ—Ö–∏–Ω",
        yearsOld: 32, country: "–†–æ—Å—Å–∏—è",
        city: "–ë–µ–ª–≥–æ—Ä–æ–¥",
        privateStory: story)
    
    lazy var user = User(person: alexey)
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        view.applyGradient()
        
        userLoginTF.text = user.login
        userPasswordTF.text = user.password
    }
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        super.touchesBegan(touches, with: event)
        view.endEditing(true)
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        guard let tabBarVC = segue.destination as? UITabBarController else { return }
        
        guard let viewControllers = tabBarVC.viewControllers else { return }
        
        viewControllers.forEach { viewController in
            if let welcomeVC = viewController as? WelcomeViewController {
                welcomeVC.user = user
                welcomeVC.view.applyGradient()
                welcomeVC.title = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å"
            } else if let secondAboutVC = viewController as? SecondAboutViewController {
                secondAboutVC.user = user
                secondAboutVC.view.applyGradient()
                secondAboutVC.title = "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
            } else if let navigationVC = viewController as? UINavigationController {
                guard let firstAboutVC = navigationVC.topViewController as? FirstAboutViewController else { return }
                firstAboutVC.user = user
                firstAboutVC.view.applyGradient()
                firstAboutVC.title = "–û–±–æ –º–Ω–µ"
            }
        }
    }
    
    @IBAction func loginButtonTapped() {
        guard userLoginTF.text != "",
              userPasswordTF.text != "" else {
            getAlertMessage(
                title: "‚ö†Ô∏è",
                message: "–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏! –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±–∞ –ø–æ–ª—è!"
            )
            return
        }
        
        guard userLoginTF.text == user.login,
              userPasswordTF.text == user.password else {
            getAlertMessage(
                title: "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å",
                message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞"
            )
            return
        }
        performSegue(withIdentifier: "segueIdentifier", sender: nil)
    }
    
    @IBAction func forgotLoginButtonTapped() {
        getAlertMessage(
            title: "–û–π!",
            message: "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \(user.login) üí°"
        )
    }
    
    @IBAction func forgotPasswordButtonTapped() {
        getAlertMessage(
            title: "–û–π!",
            message: "–ü–∞—Ä–æ–ª—å: \(user.password) üí°")
    }
    
    @IBAction func unwind(for unwindSegue: UIStoryboardSegue) {
        userLoginTF.text = ""
        userPasswordTF.text = ""
    }
    
    private func getAlertMessage(title: String, message: String) {
        let alert = UIAlertController(
            title: title,
            message: message,
            preferredStyle: .alert
        )
        alert.addAction(UIAlertAction(
            title: "–û–ö",
            style: .cancel, handler: { _ in
                self.userPasswordTF.text = ""
            }
        )
        )
        present(
            alert,
            animated: true
        )
    }
}

extension UIView {
    func applyGradient() {
        let firstColor = UIColor(
            red: 255 / 255,
            green: 153 / 255,
            blue: 255 / 255,
            alpha: 1).cgColor
        
        let secondColor = UIColor(
            red: 102 / 255,
            green: 102 / 255,
            blue: 255 / 255,
            alpha: 1).cgColor
        
        let gradientLayer = CAGradientLayer()
        
        gradientLayer.frame = self.bounds
        gradientLayer.colors = [firstColor, secondColor]
        gradientLayer.startPoint = CGPoint(x: 0, y: 0)
        gradientLayer.endPoint = CGPoint(x: 0, y: 1)
        
        self.layer.insertSublayer(gradientLayer, at: 0)
    }
}

extension UILabel {
    func animation(typing value: String, duration: Double){
        for char in value {
            self.text?.append(char)
            RunLoop.current.run(until: Date() + duration)
        }
    }
}
